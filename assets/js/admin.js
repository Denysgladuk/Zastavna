// --- ADMIN LOGIN SYSTEM ---
async function login(username, password) {
  try {
    const res = await fetch("/api/auth/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ login: username, password }),
    });

    const data = await res.json();

    if (res.ok && data.token) {
      localStorage.setItem("authToken", data.token);
      console.log("%c‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ —è–∫ –∞–¥–º—ñ–Ω!", "color:green;font-weight:bold;");
      location.reload();
    } else {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É:", data.message || "–Ω–µ–≤—ñ–¥–æ–º–∞ –ø—Ä–∏—á–∏–Ω–∞");
    }
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É:", err);
  }
}

function logout() {
  localStorage.removeItem("authToken");
  console.log("%cüö™ –í–∏ –≤–∏–π—à–ª–∏ –∑ –∞–∫–∞—É–Ω—Ç–∞", "color:orange;font-weight:bold;");
  location.reload();
}

// --- –ö–æ–ª–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è ---
document.addEventListener("DOMContentLoaded", () => {
  const token = localStorage.getItem("authToken");
  if (!token) return;

  fetch("/api/health")
    .then(() => {
      // –ö–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É" (–Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π)
      const container = document.querySelector("main");
      if (container && !document.getElementById("add-news-btn")) {
        const btn = document.createElement("button");
        btn.id = "add-news-btn";
        btn.textContent = "‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É";
        btn.className =
          "fixed bottom-6 right-6 bg-blue-600 text-white px-6 py-3 rounded-lg shadow-lg hover:bg-blue-700 transition";
        btn.onclick = () => openNewsEditor();
        document.body.appendChild(btn);
      }

      // –ö–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏" —ñ "–í–∏–¥–∞–ª–∏—Ç–∏" (–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ article.html)
      const articleEl = document.querySelector("article");
      if (articleEl && !document.getElementById("edit-news-btn")) {
        const controls = document.createElement("div");
        controls.className = "mt-6 flex gap-4";

        const editBtn = document.createElement("button");
        editBtn.id = "edit-news-btn";
        editBtn.textContent = "‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏";
        editBtn.className = "bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700";
        editBtn.onclick = () => editArticle();

        const delBtn = document.createElement("button");
        delBtn.id = "delete-news-btn";
        delBtn.textContent = "üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏";
        delBtn.className = "bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700";
        delBtn.onclick = () => deleteArticle();

        controls.append(editBtn, delBtn);
        articleEl.appendChild(controls);
      }
    })
    .catch(() => localStorage.removeItem("authToken"));
});

// --- –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω–∏ ---
function editArticle() {
  const id = new URLSearchParams(window.location.search).get("id");
  const title = document.getElementById("article-title")?.textContent || "";
  const imageEl = document.getElementById("article-image");
  const image = imageEl ? imageEl.src : "";
  const content = document.getElementById("article-content")?.innerHTML || "";
  openNewsEditor(id, title, content, image);
}

      // –ö–Ω–æ–ø–∫–∞ "–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–ø–∏—Å–∞–º–∏" (–Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Ç–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ appointment.html)
      const isHomePage = window.location.pathname === "/" || window.location.pathname.endsWith("index.html");
      const isAppointmentPage = window.location.pathname.includes("appointment.html");
      
      if ((isHomePage || isAppointmentPage) && !document.getElementById("appointments-admin-btn")) {
        const appointmentsBtn = document.createElement("button");
        appointmentsBtn.id = "appointments-admin-btn";
        appointmentsBtn.textContent = "üìã –ó–∞–ø–∏—Å–∏";
        appointmentsBtn.className =
          "fixed bottom-24 right-6 bg-green-600 text-white px-6 py-3 rounded-lg shadow-lg hover:bg-green-700 transition z-40";
        appointmentsBtn.onclick = () => {
          window.location.href = "/patients/admin_appointments.html";
        };
        document.body.appendChild(appointmentsBtn);
      }

// --- –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–æ–≤–∏–Ω–∏ ---
async function deleteArticle() {
  const id = new URLSearchParams(window.location.search).get("id");
  if (!confirm("–í–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –Ω–æ–≤–∏–Ω—É?")) return;

  const token = localStorage.getItem("authToken");
  const res = await fetch(`/api/news/${id}`, {
    method: "DELETE",
    headers: { Authorization: "Bearer " + token },
  });

  if (res.ok) {
    alert("‚úÖ –ù–æ–≤–∏–Ω—É –≤–∏–¥–∞–ª–µ–Ω–æ!");
    location.href = "/";
  } else {
    alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏.");
  }
}

// --- –Ñ–¥–∏–Ω–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä (—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è / —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è) ---
function openNewsEditor(id = null, titleVal = "", contentVal = "", imageVal = "") {
  const overlay = document.createElement("div");
  overlay.className = "fixed inset-0 bg-black/50 flex items-center justify-center z-50 overflow-auto p-4";

  // –ï–∫—Ä–∞–Ω—É—î–º–æ HTML –¥–ª—è –±–µ–∑–ø–µ–∫–∏
  const escapeHtml = (str) => str.replace(/"/g, "&quot;").replace(/'/g, "&#39;");

  overlay.innerHTML = `
    <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-3xl relative">
      <h2 class="text-2xl font-bold mb-5 text-gray-800">
        ${id ? "‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω—É" : "üì∞ –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–Ω—É"}
      </h2>

      <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
      <label class="block mb-2 font-medium text-gray-700">–ó–∞–≥–æ–ª–æ–≤–æ–∫</label>
      <input id="news-title" type="text" value="${escapeHtml(titleVal)}" placeholder="–í–≤–µ–¥—ñ—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫"
        class="w-full border border-gray-300 p-2 mb-5 rounded focus:ring-2 focus:ring-blue-500 outline-none">

      <!-- –û—Å–Ω–æ–≤–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è -->
      <label class="block mb-2 font-medium text-gray-700">–û—Å–Ω–æ–≤–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</label>
      <div class="flex items-center gap-2 mb-3">
        <input id="news-image-url" type="text" value="${escapeHtml(imageVal)}" placeholder="URL –∞–±–æ –≤–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª"
          class="flex-1 border border-gray-300 p-2 rounded focus:ring-2 focus:ring-blue-500 outline-none">
        <input id="news-image-file" type="file" accept="image/*" class="hidden">
        <button type="button" id="select-file-btn" class="bg-gray-200 px-3 py-2 rounded hover:bg-gray-300 text-sm">
          üìÅ –û–±—Ä–∞—Ç–∏
        </button>
      </div>

      <div class="w-full mb-5 text-center">
        <img id="image-preview" src="${imageVal ? escapeHtml(imageVal) : ""}" alt=""
          class="max-h-64 mx-auto rounded shadow ${imageVal ? "" : "hidden"} object-contain">
      </div>

      <!-- –¢–µ–∫—Å—Ç -->
      <label class="block mb-2 font-medium text-gray-700">–¢–µ–∫—Å—Ç –Ω–æ–≤–∏–Ω–∏</label>
      <div id="editor" class="border rounded mb-5 min-h-[300px]"></div>

      <!-- –ö–Ω–æ–ø–∫–∏ -->
      <div class="flex justify-end gap-3 mt-6">
        <button type="button" id="save-news" class="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700">
          üíæ ${id ? "–û–Ω–æ–≤–∏—Ç–∏" : "–ó–±–µ—Ä–µ–≥—Ç–∏"}
        </button>
        <button type="button" id="cancel-news" class="bg-gray-300 px-6 py-2 rounded hover:bg-gray-400">‚ùå –í—ñ–¥–º—ñ–Ω–∏—Ç–∏</button>
      </div>

      <button type="button" id="close-editor" class="absolute top-2 right-3 text-gray-500 hover:text-gray-700 text-2xl">&times;</button>
    </div>
  `;

  document.body.appendChild(overlay);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Quill
  const quillScript = document.createElement("script");
  quillScript.src = "https://cdn.jsdelivr.net/npm/quill@1.3.7/dist/quill.min.js";
  document.head.appendChild(quillScript);

  const quillStyle = document.createElement("link");
  quillStyle.rel = "stylesheet";
  quillStyle.href = "https://cdn.jsdelivr.net/npm/quill@1.3.7/dist/quill.snow.css";
  document.head.appendChild(quillStyle);

  quillScript.onload = () => {
    const quill = new Quill("#editor", {
      theme: "snow",
      placeholder: "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –Ω–æ–≤–∏–Ω–∏...",
      modules: {
        toolbar: [
          [{ header: [1, 2, false] }],
          ["bold", "italic", "underline", "strike"],
          [{ list: "ordered" }, { list: "bullet" }],
          ["link", "image"],
          ["clean"],
        ],
      },
    });

    if (contentVal) quill.root.innerHTML = contentVal;

    // === –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è ===
    const imageInput = overlay.querySelector("#news-image-url");
    const fileInput = overlay.querySelector("#news-image-file");
    const fileBtn = overlay.querySelector("#select-file-btn");
    const preview = overlay.querySelector("#image-preview");

    fileBtn.onclick = () => fileInput.click();

    fileInput.onchange = () => {
      const file = fileInput.files[0];
      if (!file) return;
      
      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑–º—ñ—Ä—É (–º–∞–∫—Å–∏–º—É–º 5MB)
      if (file.size > 5 * 1024 * 1024) {
        alert("‚ùå –§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π! –ú–∞–∫—Å–∏–º—É–º 5MB.");
        return;
      }
      
      const reader = new FileReader();
      reader.onload = () => {
        imageInput.value = reader.result;
        preview.src = reader.result;
        preview.classList.remove("hidden");
      };
      reader.readAsDataURL(file);
    };

    imageInput.oninput = () => {
      const val = imageInput.value.trim();
      if (val) {
        preview.src = val;
        preview.classList.remove("hidden");
      } else {
        preview.classList.add("hidden");
      }
    };

    // === –ö–Ω–æ–ø–∫–∏ ===
    overlay.querySelector("#cancel-news").onclick = () => overlay.remove();
    overlay.querySelector("#close-editor").onclick = () => overlay.remove();

    overlay.querySelector("#save-news").onclick = async () => {
      const title = document.getElementById("news-title").value.trim();
      const image = document.getElementById("news-image-url").value.trim();
      const content = quill.root.innerHTML.trim();
      const token = localStorage.getItem("authToken");

      if (!title || !content) {
        alert("‚ö†Ô∏è –í–≤–µ–¥—ñ—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —ñ —Ç–µ–∫—Å—Ç!");
        return;
      }

      const payload = { 
        title, 
        content, 
        image: image || null,
        is_published: true 
      };

      try {
        const res = await fetch(`/api/news${id ? "/" + id : ""}`, {
          method: id ? "PUT" : "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: "Bearer " + token,
          },
          body: JSON.stringify(payload),
        });

        const data = await res.json();
        if (res.ok) {
          alert(id ? "‚úÖ –ù–æ–≤–∏–Ω—É –æ–Ω–æ–≤–ª–µ–Ω–æ!" : "‚úÖ –ù–æ–≤–∏–Ω—É —Å—Ç–≤–æ—Ä–µ–Ω–æ!");
          overlay.remove();
          location.reload();
        } else {
          alert("‚ùå –ü–æ–º–∏–ª–∫–∞: " + (data.message || "–Ω–µ–≤—ñ–¥–æ–º–∞"));
        }
      } catch (err) {
        alert("‚ùå –ó–∞–ø–∏—Ç –Ω–µ –≤–¥–∞–≤—Å—è: " + err.message);
      }
    };
  };
}